
# ==================== Checkpoint Resumption ====================

# Checkpoint resume settings - Updated for FlexControl compatibility
#resume_from_checkpoint: True
#checkpoint_artifact_name: "model_step_190000:v0"  # Replace with actual artifact name
#checkpoint_wandb_run_id: "rf9cn70h"  # Legacy run ID - automatic conversion supported
#reset_optimizer: True  # Set to True when changing learning rate significantly
#reset_beta_scheduler: False  # Set to True when changing beta annealing params

wandb_project: "CenterOfGravity"

# ===================================================================================
# Dataset Settings
# ===================================================================================

start_shuffle_on_epoch: 0.0                            # Start shuffling from epoch 1

dataset_root_path: "data/triple_streams/model_ready/AccentAt0.75/"

dataset_files:
  - 01_candombe_four_voices.pkl.bz2

# ===================================================================================
# Model parameters
# ===================================================================================

max_len: 32
d_model_enc: 64
d_model_dec: 128
dim_feedforward_enc: 128
dim_feedforward_dec: 512
embedding_size_src: 3
embedding_size_tgt: 9
latent_dim: 256
nhead_enc: 4
nhead_dec: 8
num_encoder_layers: 4
num_decoder_layers: 7

# ===================================================================================
# Flexible Control Configuration
# ===================================================================================

# Encoding Controls (converted from legacy encoding_control1/2)
n_encoding_control_tokens: [None, None]  # No need to tokenize
encoding_control_modes: ['self_attention', 'self_attention']  # Strategic: first prepended, second added
encoding_control_keys:
  - "Center of Mass | Input + Output | Magnitude"
  - "Center of Mass | Input + Output | Angle"

# Decoding Controls (converted from legacy decoding_control1/2/3)
n_decoding_control_tokens: [None, None, None,  None]  # No need to tokenize these controls
decoding_control_modes: ['self_attention', 'self_attention', 'self_attention', 'self_attention']  # All prepended (legacy behavior)
decoding_control_keys:
  - "N Active Steps | Output"
  - "Stream 1 Relative Density"         # Hits in Stream 1 divided by total hits (Normalized to 0-1)
  - "Stream 2 Relative Density"         # Hits in Stream 2 divided by total hits
  - "Stream 3 Relative Density"         # Hits in Stream 3 divided by total hits

# ===================================================================================
# Training Hyperparameters
# ===================================================================================

epochs: 1000
batch_size: 128

# Optimizer settings
lr: 0.00006369948608989782
optimizer: "adam"

# Dropout settings
dropout: 0.1
offset_dropout: 0.1
velocity_dropout: 0.1

# Loss scaling
scale_h_loss: 1
scale_v_loss: 1
scale_o_loss: 1

# Epoch Percentage-based beta annealing
beta_annealing_period_epoch_pct: 50.0                    # 50% of epoch = half epoch per cycle
beta_annealing_start_first_rise_at_epoch_pct: 100.0      # Start rising after 100% of first epoch
beta_annealing_per_cycle_rising_ratio: 0.7               # 70% of cycle is rising phase
beta_annealing_gap_ratio: 0.1                            # 10% of cycle is gap (beta=0) at end
beta_annealing_activated: true
beta_level: 0.5

# ===================================================================================
# Logging and Evaluation Settings
# ===================================================================================

# Epoch Percentage-based logging frequencies
step_log_frequency_epoch_pct: 0.5                       # Log every 0.5% = every 0.005 epochs
step_hit_score_frequency_epoch_pct: 10.0                 # Hit scores every 10% = every 0.1 epochs
step_piano_roll_frequency_epoch_pct: 25.0                # Piano rolls every 25% = every 0.25 epochs

# Evaluation settings
calculate_hit_scores_on_train: true
calculate_hit_scores_on_test: true
piano_roll_samples: true

# Model saving
save_model: true
save_model_frequency_epoch_pct: 100.0                     # Save model every 100% = every epoch
save_model_dir: "misc/FlexControlTripleStreamsVAE"

# Testing
is_testing: True